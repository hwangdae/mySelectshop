# main.yml
name: main branch auto ci process script

on: # 아래 job을 실행시킬 상황
  push:
    branches: [main]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전

    steps:
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 3. Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Install dependencies & build
      #   run: |
      #     yarn install --frozen-lockfile
      #     npx prisma generate
      #     yarn build
      #     tar -czvf build.tar.gz .next public package.json yarn.lock

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
          sleep 5

      # - name: Send build to EC2 via SCP
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ secrets.REMOTE_IP }}
      #     username: ${{ secrets.REMOTE_USER }}
      #     key: ${{ secrets.REMOTE_PRIVATE_KEY }}
      #     port: ${{ secrets.REMOTE_SSH_PORT }}
      #     source: build.tar.gz
      #     target: /home/ubuntu/mySelectshop/

      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v0.1.6 # ssh 접속하는 오픈소스
        with:
          host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
          username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
          key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
          port: ${{ secrets.REMOTE_SSH_PORT }} # 접속포트
          script: | # 실행할 스크립트
            cd mySelectshop
            npx prisma generate
            git pull origin main
            yarn install
            npx prisma generate
            yarn build
            pm2 start npm --name mySelectshop -- start

      - name: 6. Remove Github Actions IP from Security group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
