name: main branch auto ci process script

on: # 아래 job을 실행시킬 상황
  push:
    branches: [main]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전

    steps:
      # repository에서 소스 파일을 러너의 디렉토리에 가져온다.
      - name: Checkout
        uses: actions/checkout@v3

      # 버전에 맞게 node.js 설치
      - name: use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: yarn

      # 캐시 설정하기
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # yarn install, build
      - name: Install deps and build
        run: |
          yarn install
          npx prisma generate
          yarn build
          
      # 빌드 파일 압축하기
      - name: Compress build files
        run: |
          tar -zcvf build.tar.gz .next public node_modules package.json yarn.lock

      # # Gituhb Actions IP 가져오기
      # - name: Get Github Actions IP
      #   id: ip
      #   uses: haythem/public-ip@v1.2
      # # AWS와 연결하기
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-2

      # - name: Add Github Actions IP to Security group
      #   run: |
      #     aws ec2 authorize-security-group-ingress \
      #       --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
      #       --protocol tcp --port 22 \
      #       --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # - name: excuting remote ssh commands
      #   uses: appleboy/ssh-action@v0.1.6 # ssh 접속하는 오픈소스
      #   with:
      #     host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
      #     username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
      #     key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
      #     port: ${{ secrets.REMOTE_SSH_PORT }} # 접속포트
      #     script: | # 실행할 스크립트
      #       cd mySelectshop
      #       git pull origin main
      #       yarn install
      #       npx prisma generate
      #       yarn build
      #       pm2 restart mySelectshop || pm2 start yarn --name mySelectshop -- start

      # - name: 6. Remove Github Actions IP from Security group
      #   run: |
      #     aws ec2 revoke-security-group-ingress \
      #       --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
      #       --protocol tcp \
      #       --port 22 \
      #       --cidr ${{ steps.ip.outputs.ipv4 }}/32
